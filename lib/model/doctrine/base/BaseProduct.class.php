<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Product', 'doctrine');

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $image_path
 * @property decimal $price
 * @property decimal $old_price
 * @property clob $description
 * @property clob $content
 * @property integer $status
 * @property integer $priority
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $ProductCategory
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getImagePath()       Returns the current record's "image_path" value
 * @method decimal             getPrice()           Returns the current record's "price" value
 * @method decimal             getOldPrice()        Returns the current record's "old_price" value
 * @method clob                getDescription()     Returns the current record's "description" value
 * @method clob                getContent()         Returns the current record's "content" value
 * @method integer             getStatus()          Returns the current record's "status" value
 * @method integer             getPriority()        Returns the current record's "priority" value
 * @method Doctrine_Collection getCategory()        Returns the current record's "Category" collection
 * @method Doctrine_Collection getProductCategory() Returns the current record's "ProductCategory" collection
 * @method Product             setName()            Sets the current record's "name" value
 * @method Product             setImagePath()       Sets the current record's "image_path" value
 * @method Product             setPrice()           Sets the current record's "price" value
 * @method Product             setOldPrice()        Sets the current record's "old_price" value
 * @method Product             setDescription()     Sets the current record's "description" value
 * @method Product             setContent()         Sets the current record's "content" value
 * @method Product             setStatus()          Sets the current record's "status" value
 * @method Product             setPriority()        Sets the current record's "priority" value
 * @method Product             setCategory()        Sets the current record's "Category" collection
 * @method Product             setProductCategory() Sets the current record's "ProductCategory" collection
 * 
 * @package    source
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Tên sản phẩm',
             'length' => 255,
             ));
        $this->hasColumn('image_path', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ảnh đại diện',
             'length' => 255,
             ));
        $this->hasColumn('price', 'decimal', 20, array(
             'type' => 'decimal',
             'notnull' => true,
             'comment' => 'Gia tien',
             'length' => 20,
             ));
        $this->hasColumn('old_price', 'decimal', 20, array(
             'type' => 'decimal',
             'comment' => 'Gia tien truoc day',
             'length' => 20,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             'comment' => 'Mô tả',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             'comment' => 'Nội dung chi tiết',
             ));
        $this->hasColumn('status', 'integer', 3, array(
             'type' => 'integer',
             'comment' => 'Trạng thái của sản phẩm',
             'length' => 3,
             ));
        $this->hasColumn('priority', 'integer', 5, array(
             'type' => 'integer',
             'default' => 10,
             'comment' => 'Do uu tien',
             'length' => 5,
             ));

        $this->option('comment', 'Bang luu thong tin sản phẩm');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Category', array(
             'refClass' => 'ProductCategory',
             'local' => 'product_id',
             'foreign' => 'category_id'));

        $this->hasMany('ProductCategory', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             'builder' => 
             array(
              0 => 'removeSignClass',
              1 => 'removeSign',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}