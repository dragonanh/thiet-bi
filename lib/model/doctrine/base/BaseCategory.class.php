<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Category', 'doctrine');

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property integer $is_active
 * @property integer $priority
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $ProductCategory
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method integer             getIsActive()        Returns the current record's "is_active" value
 * @method integer             getPriority()        Returns the current record's "priority" value
 * @method Doctrine_Collection getProduct()         Returns the current record's "Product" collection
 * @method Doctrine_Collection getProductCategory() Returns the current record's "ProductCategory" collection
 * @method Category            setName()            Sets the current record's "name" value
 * @method Category            setDescription()     Sets the current record's "description" value
 * @method Category            setIsActive()        Sets the current record's "is_active" value
 * @method Category            setPriority()        Sets the current record's "priority" value
 * @method Category            setProduct()         Sets the current record's "Product" collection
 * @method Category            setProductCategory() Sets the current record's "ProductCategory" collection
 * 
 * @package    source
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ten danh muc',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Mô tả',
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'comment' => '0: an, 1: hien thi',
             'length' => 1,
             ));
        $this->hasColumn('priority', 'integer', 5, array(
             'type' => 'integer',
             'default' => 10,
             'comment' => 'Do uu tien',
             'length' => 5,
             ));


        $this->index('phone_option_id_index', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->option('comment', 'Bang luu danh mục sản phẩm');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Product', array(
             'refClass' => 'ProductCategory',
             'local' => 'category_id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductCategory', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             'builder' => 
             array(
              0 => 'removeSignClass',
              1 => 'removeSign',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}