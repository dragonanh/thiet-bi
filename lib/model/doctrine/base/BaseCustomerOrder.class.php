<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CustomerOrder', 'doctrine');

/**
 * BaseCustomerOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $status
 * @property string $full_name
 * @property string $phone_number
 * @property integer $city_id
 * @property string $address
 * @property clob $note
 * @property integer $payment_type
 * @property decimal $total_price
 * 
 * @method integer       getStatus()       Returns the current record's "status" value
 * @method string        getFullName()     Returns the current record's "full_name" value
 * @method string        getPhoneNumber()  Returns the current record's "phone_number" value
 * @method integer       getCityId()       Returns the current record's "city_id" value
 * @method string        getAddress()      Returns the current record's "address" value
 * @method clob          getNote()         Returns the current record's "note" value
 * @method integer       getPaymentType()  Returns the current record's "payment_type" value
 * @method decimal       getTotalPrice()   Returns the current record's "total_price" value
 * @method CustomerOrder setStatus()       Sets the current record's "status" value
 * @method CustomerOrder setFullName()     Sets the current record's "full_name" value
 * @method CustomerOrder setPhoneNumber()  Sets the current record's "phone_number" value
 * @method CustomerOrder setCityId()       Sets the current record's "city_id" value
 * @method CustomerOrder setAddress()      Sets the current record's "address" value
 * @method CustomerOrder setNote()         Sets the current record's "note" value
 * @method CustomerOrder setPaymentType()  Sets the current record's "payment_type" value
 * @method CustomerOrder setTotalPrice()   Sets the current record's "total_price" value
 * 
 * @package    source
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCustomerOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('customer_order');
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'comment' => '0: Don hang moi tao, 1..',
             'length' => 1,
             ));
        $this->hasColumn('full_name', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ten khach hang',
             'length' => 255,
             ));
        $this->hasColumn('phone_number', 'string', 20, array(
             'type' => 'string',
             'comment' => 'So dien thoai khach hang',
             'length' => 20,
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             'comment' => 'Thanh pho cua khach hang',
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Dia chi khach hang',
             'length' => 255,
             ));
        $this->hasColumn('note', 'clob', null, array(
             'type' => 'clob',
             'comment' => 'Ghi chu cua khach hang',
             ));
        $this->hasColumn('payment_type', 'integer', null, array(
             'type' => 'integer',
             'comment' => 'Hình thức thanh toán',
             ));
        $this->hasColumn('total_price', 'decimal', null, array(
             'type' => 'decimal',
             'default' => 0,
             'comment' => 'Tong so tien cua don hang',
             ));


        $this->index('customer_order_id_index', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->option('comment', 'Bang luu thong tin don hang');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}